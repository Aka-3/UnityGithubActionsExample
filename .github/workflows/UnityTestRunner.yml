name: UnityTestRunnerExampleSlack

on:
  push:
    branches:
    - master

jobs:
  editorTestJob:
    runs-on: ubuntu-latest
    container: docker://gableroux/unity3d:${{ matrix.unity-tag }}
    strategy:
      matrix:
        unity-tag: [2020.1.3f1]

    steps:
    - uses: actions/checkout@master
    - run: mkdir -p path/to/artifact
    - run: ls /home | echo
    - run: echo ${ULF} > /Unity_v2020.x.ulf
      env:
        CYPHER_KEY: ${{ secrets.ulf }}
    - run: /opt/Unity/Editor/Unity -manualLicenseFile /Unity_v2020.x.ulf -batchmode -nographics -quit || exit 0
    - run: /opt/Unity/Editor/Unity -batchmode -nographics -silent-crashes -logFile -projectPath . -runTests -testResults path/to/artifact/results.xml || exit 0
      env:
        USERNAME: ${{ secrets.username }}
        PASSWORD: ${{ secrets.password }}
    - uses: actions/upload-artifact@master
      with:
        name: test_results
        path: path/to/artifact

  reportResultJob:
    runs-on: ubuntu-latest
    needs: editorTestJob
    steps:
    - uses: actions/download-artifact@master
      with:
        name: test_results
        path: artifact
    - run: git clone https://github.com/pCYSl5EDgo/NUnitXmlReporter.git
    - uses: actions/setup-dotnet@v1.0.2
      with:
        dotnet-version: '3.0.100'
    - name: report result to slack
      run: |
        cd NUnitXmlReporter
        dotnet run ../artifact/results.xml ../slackJson --slack-block  $GITHUB_REPOSITORY $GITHUB_SHA || INPUT_RESULT=$?
        cd ..
        curl -X POST -H 'ContentX-type:application/json' --data "$(cat slackJson)" $SLACK
        exit $INPUT_RESULT
      env:
        SLACK: ${{ secrets.slackhook }}
